@model IEnumerable<WebBanHang.Models.Product>
@{
    ViewData["Title"] = "Home Page";
    int numOfQuantity = 1;
    var isLikedDict = ViewBag.IsLiked as Dictionary<int, bool>;
}

<div>
    <partial name="MenuPartial" />
    <div class="wp-content">
        <div class="container">
            <div id="myCarousel" class="carousel slide" data-ride="carousel">
                <!-- Indicators -->
                <ol class="carousel-indicators">
                    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                    <li data-target="#myCarousel" data-slide-to="1"></li>
                    <li data-target="#myCarousel" data-slide-to="2"></li>
                </ol>

                <!-- Wrapper for slides -->
                <div class="carousel-inner">
                    <div class="item active">
                        <img src="/images/Nhung-cau-noi-hay-ve-doc-sach-tao-dong-luc-doc-sach.jpg" alt="Los Angeles">
                    </div>

                    <div class="item">
                        <img src="/images/2.png" alt="Chicago">
                    </div>

                    <div class="item">
                        <img src="/images/Untitled1_20190424134432.jpg" alt="New York">
                    </div>
                </div>

                <!-- Left and right controls -->
                <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="right carousel-control" href="#myCarousel" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    </div>

    <div>
        <div class="noibat">
            <div class="headdertieude">
                <p class="tieude">Sách nổi bật</p>
                <hr class="divider">
            </div>
        </div>

        <ul>
            <div class="container px-4 px-lg-5 mt-5">
                <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">

                    @foreach (var item in Model.OrderByDescending(p => p.SoLuongBanRa).Take(4))
                    {
                        if (item.LuongTonKho > 0)
                        {
                            bool isLiked = isLikedDict != null && isLikedDict.ContainsKey(item.Id) && isLikedDict[item.Id];
                            <div class="col mb-5">
                                <div class="card gap-3" style="width: 18rem;">
                                    <div class="card-img-wrapper" onmouseover="zoomIn(this)" onmouseout="zoomOut(this)">
                                        <img src="@item.ImageUrl" class="card-img-top" alt="...">
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </h5>
                                        <div class="d-flex">
                                            <span>Price: </span>
                                            <p class="mx-3">@item.Price.ToString("#,##0") Vnđ</p>
                                        </div>
                                        <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-productId="@item.Id" asp-route-quantity="@numOfQuantity">
                                            <button class="btn btn-outline-dark"> <i class="bi-cart-fill me-1"></i> </button>
                                        </a>
                                        <a asp-controller="Home" asp-action="Detail" class="btn btn-primary font-control" asp-route-id="@item.Id">chi tiết</a>
                                        <form>
                                            @Html.AntiForgeryToken()
                                            <button class="likeButton" type="button" data-product-id="@item.Id">
                                                @(isLiked ? "Unlike" : "Like")
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col mb-5">
                                <div class="card gap-3" style="width: 18rem;">
                                    <div class="card-img-wrapper" onmouseover="zoomIn(this)" onmouseout="zoomOut(this)">
                                        <img src="@item.ImageUrl" class="card-img-top" alt="...">
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </h5>
                                        <div class="d-flex">
                                            <span>Price: </span>
                                            <p class="mx-3">@item.Price.ToString("#,##0") Vnđ</p>
                                        </div>

                                        <div class="alert alert-warning" role="alert">
                                            Hết hàng
                                        </div>

                                    </div>
                                </div>
                            </div>

                        }
                    }
                </div>
            </div>
        </ul>
        <a asp-controller="Home" asp-action="BestSellingProducts" class="view-link">   <p>view</p></a>
    </div>

<div>
    <div class="yeuthich">
        <div class="headdertieude">
            <a><p class="tieude">Sách yêu thích</p></a>
            <hr class="divider">
        </div>
    </div>
    <ul>
        <div class="container px-4 px-lg-5 mt-5">
            <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                @foreach (var item in Model.OrderByDescending(p => p.TotalLikes).Take(4))
                {
                        if (item.LuongTonKho > 0)
                        {
                            bool isLiked = isLikedDict != null && isLikedDict.ContainsKey(item.Id) && isLikedDict[item.Id];
                            <div class="col mb-5">
                                <div class="card gap-3" style="width: 18rem;">
                                    <div class="card-img-wrapper" onmouseover="zoomIn(this)" onmouseout="zoomOut(this)">
                                        <img src="@item.ImageUrl" class="card-img-top" alt="...">
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </h5>
                                        <div class="d-flex">
                                            <span>Price: </span>
                                            <p class="mx-3">@item.Price.ToString("#,##0") Vnđ</p>
                                        </div>
                                        <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-productId="@item.Id" asp-route-quantity="@numOfQuantity">
                                            <button class="btn btn-outline-dark"> <i class="bi-cart-fill me-1"></i> </button>
                                        </a>
                                        <a asp-controller="Home" asp-action="Detail" class="btn btn-primary font-control" asp-route-id="@item.Id">chi tiết</a>
                                        <form>
                                            @Html.AntiForgeryToken()
                                            <button class="likeButton" type="button" data-product-id="@item.Id">
                                                @(isLiked ? "Unlike" : "Like")
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col mb-5">
                                <div class="card gap-3" style="width: 18rem;">
                                    <div class="card-img-wrapper" onmouseover="zoomIn(this)" onmouseout="zoomOut(this)">
                                        <img src="@item.ImageUrl" class="card-img-top" alt="...">
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </h5>
                                        <div class="d-flex">
                                            <span>Price: </span>
                                            <p class="mx-3">@item.Price.ToString("#,##0") Vnđ</p>
                                        </div>

                                        <div class="alert alert-warning" role="alert">
                                            Hết hàng
                                        </div>

                                    </div>
                                </div>
                            </div>

                        }
                }
            </div>
        </div>
    </ul>
        <a asp-controller="Home" asp-action="MostLikedProducts" class="view-link">   <p>View All</p></a>
</div>

<partial name="ProductsByCategory" />
</div>
<script>
    function zoomIn(element) {
        element.style.transform = "scale(1.1)"; // Phóng to khung
    }

    function zoomOut(element) {
        element.style.transform = "scale(1)"; // Thu nhỏ khung khi di chuột ra khỏi
    }
</script>
<style>
    .card-img-wrapper {
        height: 300px;
        width: 18rem;
        overflow: hidden;
        transition: transform 0.3s ease; /* Thêm hiệu ứng chuyển đổi mượt mà */
    }

        .card-img-wrapper:hover {
            transform: scale(1.1); /* Phóng to khung khi di chuột vào */
        }

    .card-img-top {
        height: 100%;
        width: 100%;
        object-fit: cover; /* Đảm bảo tỉ lệ hình ảnh không bị biến dạng */
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.likeButton').click(function () {
            var button = $(this);
            var productId = button.data('product-id');
            var token = $('input[name="__RequestVerificationToken"]').val();
            var isLiked = button.data('is-liked');

            $.ajax({
                url: isLiked ? '@Url.Action("UnlikeProduct", "Home")' : '@Url.Action("LikeProduct", "Home")',
                type: 'POST',
                data: {
                    productId: productId,
                    __RequestVerificationToken: token
                },
                success: function (response) {
                    if (response.success) {
                        button.data('is-liked', !isLiked);
                        button.text(response.isLiked ? 'Unlike' : 'Like');
                        // Cập nhật số lượt thích (nếu có phần tử để hiển thị)
                        $('#totalLikes-' + productId).text(response.totalLikes);
                    } else {
                        alert(response.message || 'Something went wrong!');
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    alert('An error occurred while processing your request: ' + xhr.status + ' ' + error);
                }
            });
        });
    });



</script>
